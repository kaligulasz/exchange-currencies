{"version":3,"sources":["webpack:///./common/themeVariables.js","webpack:///./components/Button.js","webpack:///./actions/mainPocketActions.js","webpack:///./reducers/mainPocketReducer.js","webpack:///./components/carousel/CarouselItem.js","webpack:///./components/carousel/CarouselNavigation.js","webpack:///./components/carousel/Carousel.js","webpack:///./containers/Main.js","webpack:///./actions/currencyRatesActions.js","webpack:///./reducers/currencyRatesReducer.js","webpack:///./components/Loader.js","webpack:///./components/Message.js","webpack:///./components/RequestLoader.js","webpack:///./actions/exchangePocketActions.js","webpack:///./reducers/exchangePocketReducer.js","webpack:///./components/MoneyInput.js","webpack:///./components/ExchangeItem.js","webpack:///./components/Select.js","webpack:///./components/CurrencySelectors.js","webpack:///./components/ExchangeNavigation.js","webpack:///./components/ExchangeWrapper.js","webpack:///./containers/Exchange.js","webpack:///./containers/App.js","webpack:///./reducers/index.js","webpack:///./services/requestService.js","webpack:///./sagas/currencyRatesSaga.js","webpack:///./sagas/index.js","webpack:///./index.js","webpack:///./configureStore.js"],"names":["theme","color","primary","white","black","primaryGradient","mediaQuery","phoneBig","primaryHeight","mobileHeight","primaryWidth","mobileWidth","primaryMaxWidth","ButtonContainer","styled","button","withConfig","displayName","componentId","props","secondary","tertiary","uppercase","Button","children","onClick","rest","react_default","a","createElement","_extends","propTypes","PropTypes","node","isRequired","func","getMainPocket","state","mainPocket","pockets","getMainPocketCurrencyList","createSelector","Object","keys","usd","currencySymbol","currency","description","amount","id","eur","gbp","action","type","ItemWrapper","div","Title","h4","Description","p","CurrencySymbol","span","CarouselItem","item","object","Wrapper","CarouselNavigation","handleSlideChange","CarouselNavigation_Button","data-direction","CarouselContainer","carouselConfig","offsetRadius","showNavigation","config","gentle","Carousel","items","onSlideChange","currentSlide","setCurrentSlide","useState","slides","reduce","prev","current","key","content","carousel_CarouselItem","parseToSlides","itemsKeys","Carousel_Wrapper","bundle_default","goToSlide","animationConfig","carousel_CarouselNavigation","event","slideNumber","target","getAttribute","length","changingFromCurrency","changingToCurrency","FlexContainer","PrimaryWrapper","section","Main","history","selectedCurrency","setSelectedCurrency","carousel_Carousel","components_Button","push","Sync_esm","size","ReactRouterPropTypes","connect","withRouter","UPDATE_CURRENCY_RATES_REQUESTED","CANCEL_UPDATE_CURRENCY_RATES","updateCurrencyRatesFailed","updateCurrencyRatesSuccessful","payload","updateCurrencyRatesCancelled","getStatus","currencyRates","status","getCurrencyRates","currencies","rate","rates","USD","EUR","GBP","Background","StyledSpinner","Spinner5","Loader","MessageWrapper","Message","message","defaultProps","string","oneOfType","arrayOf","ErrorIcon","Error","RequestLoader","RequestLoader_Wrapper","components_Loader","components_Message","getExchangePocket","exchangePocket","[object Object]","Input","input","MinusIcon","MoneyInput","onChange","maxValue","inputValue","setInputValue","useEffect","MoneyInput_Wrapper","value","test","filter","char","includes","validateDotDuplication","1","afterDot","split","validateTwoDigitsAfterDot","slice","validateMultipleZero","placeholder","autoFocus","name","number","h3","Container","Item","textAlignRight","ResultWrapper","Result","ExchangeItem","pocket","onAmountChange","actualRate","changingFromCurrencySymbol","mainPocketAmount","currencyJs","summaryAmount","subtract","ExchangeItem_Wrapper","ExchangeItem_Title","ExchangeItem_Description","components_MoneyInput","react","Plus_esm","bool","StyledSelect","select","Select","options","selected","Select_extends","defaultValue","map","option","array","SelectorsWrapper","Typo","marginLeft","CurrencySelectors","currencyList","match","params","handleOnSelectChange","components_Select","data-changing","header","AppWrapper","ExchangeNavigation","ExchangeNavigation_Background","components_CurrencySelectors","ItemsWrapper","SyncIcon","Sync","Footer","footer","ExchangeWrapper","syncWithMainPocketAction","setCurrencyAmountAction","updateMainPocketAction","changingFromPocket","changingToPocket","ExchangeWrapper_PrimaryWrapper","components_ExchangeNavigation","components_ExchangeItem","amountInDollars","divide","selectedCurrencyNewAmount","targetCurrencyNewAmount","multiply","add","Exchange","cancelUpdateCurrencyRatesAction","requestUpdateCurrencyRatesAction","components_RequestLoader","components_ExchangeWrapper","GlobalStyles","createGlobalStyle","styledNormalize","App","styled_components_browser_esm","react_router_dom","react_router","path","component","exact","AppReducer","combineReducers","getData","async","fetch","feedUrl","json","error","requester","join","buildFeedUrl","updateCurrencyRates","currenciesData","call","put","delay","cancelled","watchUpdateCurrencyRates","take","updateCurrencyRatesTask","fork","cancel","rootSaga","all","store","sagaMiddleware","createSagaMiddleware","middlewares","applyMiddleware","createStore","reducers","run","configureStore","render","es","containers_App","document","getElementById"],"mappings":"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","file":"main.96872b33cbdc52136031.js","sourcesContent":["const theme = {\n  color: {\n    primary: '#464b51',\n    white: '#fff',\n    black: '#000',\n    primaryGradient: 'linear-gradient(to right, #185a9d, #43cea2)',\n  },\n  mediaQuery: {\n    phoneBig: '480px',\n  },\n  primaryHeight: '55vh',\n  mobileHeight: '100vh',\n  primaryWidth: '70%',\n  mobileWidth: '85%',\n  primaryMaxWidth: '30rem',\n};\n\nexport default theme;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst ButtonContainer = styled.button`\n  border: 1px solid ${props => props.theme.color.white};\n  color: ${props => props.theme.color.white};\n  cursor: pointer;\n  background: none;\n  line-height: 1;\n  \n  ${({ primary }) => primary && `\n    border-radius: 1rem;\n    padding: 0.5rem 3rem;\n    font-size: 1.2rem;\n    font-weight: 300;\n  `};\n  \n  ${({ secondary }) => secondary && `\n    width: 2.5rem;\n    height: 2.5rem;\n    border-radius: 50%;\n  `};\n  \n  ${({ tertiary }) => tertiary && `\n    border-radius: 0.5rem;\n    padding: 0.1rem 1rem;\n    font-weight: 300;\n  `};\n  \n  ${({ uppercase }) => uppercase && `\n    text-transform: uppercase;\n  `};\n`;\n\nconst Button = ({ children, onClick, ...rest }) => (\n  <ButtonContainer onClick={onClick} {...rest}>{children}</ButtonContainer>\n);\n\nButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","export const UPDATE_MAIN_POCKET = 'UPDATE_MAIN_POCKET';\n\nexport const updateMainPocket = pockets => ({\n  type: UPDATE_MAIN_POCKET,\n  pockets,\n});\n","import { createSelector } from 'reselect';\n\nimport {\n  UPDATE_MAIN_POCKET,\n} from '../actions/mainPocketActions';\n\nconst mainPocket = (state = {\n  pockets: {\n    usd: {\n      currencySymbol: '$',\n      currency: 'usd',\n      description: 'USD - American Dollar',\n      amount: 30.31,\n      id: 1,\n    },\n    eur: {\n      currencySymbol: '€',\n      currency: 'eur',\n      description: 'EUR - Euro',\n      amount: 20.10,\n      id: 2,\n    },\n    gbp: {\n      currencySymbol: '£',\n      currency: 'gbp',\n      description: 'GBP - British Pound',\n      amount: 25.55,\n      id: 3,\n    },\n  },\n}, action) => {\n  switch (action.type) {\n    case UPDATE_MAIN_POCKET:\n      return {\n        ...state,\n        pockets: action.pockets,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const getMainPocket = state => state.mainPocket.pockets;\nexport const getMainPocketCurrencyList = createSelector(\n  [getMainPocket],\n  pockets => Object.keys(pockets),\n);\n\nexport default mainPocket;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst ItemWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  min-width: 8rem;\n  font-size: 1.2rem;\n`;\n\nconst Title = styled.h4`\n  font-size: 3rem;\n  font-weight: 300;\n  margin: 0;\n`;\n\nconst Description = styled.p`\n  font-size: 1rem;\n  font-weight: 300;\n  white-space: nowrap;\n`;\n\nconst CurrencySymbol = styled.span`\n  font-size: 1.5rem;\n`;\n\nconst CarouselItem = ({ item }) => (\n  <ItemWrapper>\n    <Title>\n      <CurrencySymbol>{item.currencySymbol}</CurrencySymbol>\n      {item.amount}\n    </Title>\n    <Description>{item.description}</Description>\n  </ItemWrapper>\n);\n\nCarouselItem.propTypes = {\n  item: PropTypes.object.isRequired,\n};\n\nexport default CarouselItem;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Wrapper = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  display: flex;\n  justify-content: space-between;\n  z-index: 1;\n`;\n\nconst Button = styled.button`\n  background: none;\n  border: 0;\n  outline: none;\n  width: 20%;\n  cursor: pointer;\n`;\n\nconst CarouselNavigation = ({ handleSlideChange }) => (\n  <Wrapper>\n    <Button onClick={handleSlideChange} type=\"button\" data-direction=\"prev\" />\n    <Button onClick={handleSlideChange} type=\"button\" data-direction=\"next\" />\n  </Wrapper>\n);\n\nCarouselNavigation.propTypes = {\n  handleSlideChange: PropTypes.func.isRequired,\n};\n\nexport default CarouselNavigation;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport CarouselSpring from 'react-spring-3d-carousel';\nimport { config } from 'react-spring';\n\n// Components\nimport CarouselItem from './CarouselItem';\nimport CarouselNavigation from './CarouselNavigation';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  max-width: 35rem;\n  height: 18rem;\n  position: relative;\n`;\n\nconst CarouselContainer = styled.div`\n  margin: 0 auto;\n  width: 50%;\n  display: flex;\n  justify-content: space-around;\n`;\n\nconst parseToSlides = items => Object.keys(items).reduce((prev, current) => ([\n  ...prev,\n  {\n    key: items[current].id,\n    content: <CarouselItem item={items[current]} />,\n  },\n]), []);\n\nconst carouselConfig = {\n  offsetRadius: 2,\n  showNavigation: false,\n  config: config.gentle,\n};\n\nconst Carousel = ({ items, onSlideChange }) => {\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const slides = parseToSlides(items);\n  const itemsKeys = Object.keys(items);\n\n  const handleSlideChange = (event) => {\n    let slideNumber = 0;\n\n    switch (event.target.getAttribute('data-direction')) {\n      case 'next':\n        slideNumber = currentSlide === (slides.length - 1) ? 0 : currentSlide + 1;\n        break;\n\n      case 'prev':\n        slideNumber = currentSlide === 0 ? (itemsKeys.length - 1) : currentSlide - 1;\n        break;\n\n      default:\n        slideNumber = 0;\n        break;\n    }\n\n    setCurrentSlide(slideNumber);\n\n    onSlideChange({\n      changingFromCurrency: itemsKeys[slideNumber],\n      changingToCurrency: (itemsKeys.length - 1) === slideNumber\n        ? itemsKeys[0]\n        : itemsKeys[slideNumber + 1],\n    });\n  };\n\n  return (\n    <Wrapper>\n      <CarouselSpring\n        slides={slides}\n        goToSlide={currentSlide}\n        offsetRadius={carouselConfig.offsetRadius}\n        showNavigation={carouselConfig.showNavigation}\n        animationConfig={carouselConfig.config}\n      />\n      <CarouselContainer />\n      <CarouselNavigation\n        currentSlide={currentSlide}\n        handleSlideChange={handleSlideChange}\n      />\n    </Wrapper>\n  );\n};\n\nCarousel.propTypes = {\n  items: PropTypes.object.isRequired,\n  onSlideChange: PropTypes.func.isRequired,\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport ReactRouterPropTypes from 'react-router-prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Sync } from 'styled-icons/octicons/Sync';\n\n// Components\nimport Button from '../components/Button';\n\n// Reducers\nimport { getMainPocket } from '../reducers/mainPocketReducer';\nimport Carousel from '../components/carousel/Carousel';\n\nconst FlexContainer = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst PrimaryWrapper = styled.section`\n  background: ${props => props.theme.color.primaryGradient};\n  height: ${props => props.theme.primaryHeight};\n  overflow: hidden;\n  \n  @media (min-width: ${props => props.theme.mediaQuery.phoneBig}) and (orientation: landscape) {\n    height: ${props => props.theme.mobileHeight};\n  }\n`;\n\nconst Main = ({ mainPocket, history }) => {\n  const [selectedCurrency, setSelectedCurrency] = useState({\n    changingFromCurrency: 'usd',\n    changingToCurrency: 'eur',\n  });\n\n  const { changingFromCurrency, changingToCurrency } = selectedCurrency;\n\n  const handleOnClick = () => {\n    history.push(`exchange/${changingFromCurrency}/${changingToCurrency}`);\n  };\n\n  return (\n    <PrimaryWrapper>\n      <FlexContainer>\n        <Carousel items={mainPocket} onSlideChange={setSelectedCurrency} />\n        <Button onClick={handleOnClick} secondary>\n          <Sync size=\"20\" />\n        </Button>\n      </FlexContainer>\n    </PrimaryWrapper>\n  );\n};\n\nMain.propTypes = {\n  mainPocket: PropTypes.object.isRequired,\n  history: ReactRouterPropTypes.history.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  mainPocket: getMainPocket(state),\n});\n\nexport default connect(mapStateToProps)(withRouter(Main));\n","export const UPDATE_CURRENCY_RATES_REQUESTED = 'UPDATE_CURRENCY_RATES_REQUESTED';\nexport const UPDATE_CURRENCY_RATES_FAILED = 'UPDATE_CURRENCY_RATES_FAILED';\nexport const UPDATE_CURRENCY_RATES_SUCCESSFUL = 'UPDATE_CURRENCY_RATES_SUCCESSFUL';\nexport const UPDATE_CURRENCY_RATES_CANCELLED = 'UPDATE_CURRENCY_RATES_CANCELLED';\nexport const CANCEL_UPDATE_CURRENCY_RATES = 'CANCEL_UPDATE_CURRENCY_RATES';\n\nexport const requestUpdateCurrencyRates = () => ({\n  type: UPDATE_CURRENCY_RATES_REQUESTED,\n});\n\nexport const cancelUpdateCurrencyRates = () => ({\n  type: CANCEL_UPDATE_CURRENCY_RATES,\n});\n\nexport const updateCurrencyRatesFailed = () => ({\n  type: UPDATE_CURRENCY_RATES_FAILED,\n});\n\nexport const updateCurrencyRatesSuccessful = payload => ({\n  type: UPDATE_CURRENCY_RATES_SUCCESSFUL,\n  payload,\n});\n\nexport const updateCurrencyRatesCancelled = () => ({\n  type: UPDATE_CURRENCY_RATES_CANCELLED,\n});\n","import {\n  UPDATE_CURRENCY_RATES_SUCCESSFUL,\n  UPDATE_CURRENCY_RATES_FAILED,\n  UPDATE_CURRENCY_RATES_CANCELLED,\n} from '../actions/currencyRatesActions';\n\nconst currencyRates = (state = {\n  status: 'initial',\n  currencies: {\n    usd: {\n      currency: '$',\n      rate: 0,\n      id: 1,\n    },\n    eur: {\n      currency: '€',\n      rate: 0,\n      id: 2,\n    },\n    gbp: {\n      currency: '£',\n      rate: 0,\n      id: 3,\n    },\n  },\n}, action) => {\n  switch (action.type) {\n    case UPDATE_CURRENCY_RATES_SUCCESSFUL:\n      return {\n        ...state,\n        status: 'successful',\n        currencies: {\n          ...state.currencies,\n          usd: {\n            ...state.currencies.usd,\n            rate: action.payload.rates.USD,\n          },\n          eur: {\n            ...state.currencies.eur,\n            rate: action.payload.rates.EUR,\n          },\n          gbp: {\n            ...state.currencies.gbp,\n            rate: action.payload.rates.GBP,\n          },\n        },\n      };\n    case UPDATE_CURRENCY_RATES_FAILED:\n      return {\n        ...state,\n        status: 'failed',\n      };\n    case UPDATE_CURRENCY_RATES_CANCELLED:\n      return {\n        ...state,\n        status: 'initial',\n      };\n    default:\n      return state;\n  }\n};\n\nexport const getStatus = state => state.currencyRates.status;\nexport const getCurrencyRates = state => state.currencyRates.currencies;\n\nexport default currencyRates;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Spinner5 } from 'styled-icons/icomoon/Spinner5';\n\nconst Background = styled.div`\n  background: ${props => props.theme.color.primaryGradient};\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  z-index: 1;\n`;\n\nconst StyledSpinner = styled(Spinner5)`\n  width: 3.5rem;\n  animation: spin 1.2s linear infinite;\n  \n  @keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n`;\n\nconst Loader = () => (\n  <Background>\n    <StyledSpinner />\n  </Background>\n);\n\nexport default Loader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst MessageWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.5rem;\n  font-weight: 300;\n  background: ${props => props.theme.color.primary};\n`;\n\nconst Message = ({\n  message,\n  children,\n}) => (\n  <MessageWrapper>\n    {children}\n    {message}\n  </MessageWrapper>\n);\n\nMessage.defaultProps = {\n  children: '',\n};\n\nMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Message;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Error } from 'styled-icons/boxicons-regular/Error';\n\n// Components\nimport Loader from './Loader';\nimport Message from './Message';\n\nconst Wrapper = styled.div`\n  position: relative;\n`;\n\nconst ErrorIcon = styled(Error)`\n  margin-right: 0.5em;\n`;\n\nconst RequestLoader = ({ status, children }) => (\n  <Wrapper>\n    {status === 'initial'\n      && <Loader />\n    }\n\n    {(status === 'successful' || status === 'initial')\n      && children\n    }\n\n    {status === 'failed'\n      && (\n        <Message message=\"something went wrong\">\n          <ErrorIcon size=\"35\" />\n        </Message>\n      )\n    }\n  </Wrapper>\n);\n\nRequestLoader.propTypes = {\n  status: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default RequestLoader;\n","export const SYNC_WITH_MAIN_POCKET = 'SYNC_WITH_MAIN_POCKET';\nexport const SET_CURRENCY_AMOUNT = 'SET_CURRENCY_AMOUNT';\n\nexport const syncWithMainPocket = pockets => ({\n  type: SYNC_WITH_MAIN_POCKET,\n  pockets,\n});\n\nexport const setCurrencyAmount = (currency, amount) => ({\n  type: SET_CURRENCY_AMOUNT,\n  amount,\n  currency,\n});\n","import { SET_CURRENCY_AMOUNT, SYNC_WITH_MAIN_POCKET } from '../actions/exchangePocketActions';\n\nconst exchangePocket = (state = {\n  pockets: {\n    usd: {\n      currencySymbol: '$',\n      currency: 'usd',\n      description: 'USD - American Dollar',\n      amount: 0,\n      id: 1,\n    },\n    eur: {\n      currencySymbol: '€',\n      currency: 'eur',\n      description: 'EUR - Euro',\n      amount: 0,\n      id: 2,\n    },\n    gbp: {\n      currencySymbol: '£',\n      currency: 'gbp',\n      description: 'GBP - British Pound',\n      amount: 0,\n      id: 3,\n    },\n  },\n}, action) => {\n  switch (action.type) {\n    case SYNC_WITH_MAIN_POCKET:\n      return {\n        ...state,\n        pockets: action.pockets,\n      };\n    case SET_CURRENCY_AMOUNT:\n      return {\n        ...state,\n        pockets: {\n          ...state.pockets,\n          [action.currency]: {\n            ...state.pockets[action.currency],\n            amount: action.amount,\n          },\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport const getExchangePocket = state => state.exchangePocket.pockets;\n\nexport default exchangePocket;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Input = styled.input`\n  border: 0;\n  background: none;\n  height: 3rem;\n  text-align: right;\n  font-size: 2rem;\n  color: ${props => props.theme.color.white};\n  position: relative;\n  outline: none;\n  max-width: 10rem;\n  \n  ::placeholder {\n    color: rgba(255, 255, 255, 0.3);\n  }\n`;\n\nconst MinusIcon = styled.div`\n  width: 0.7rem;\n  height: 3px;\n  margin-right: -0.5rem;\n  background: ${props => props.theme.color.white};\n  border-radius: 0.07rem;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\n\nconst MoneyInput = ({ onChange, maxValue }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  useEffect(() => {\n    if (maxValue < inputValue) {\n      setInputValue('');\n      onChange('');\n    }\n  }, [maxValue]);\n\n  const validateDotDuplication = value => [...value].filter(char => char.includes('.')).length <= 1;\n\n  const validateTwoDigitsAfterDot = (value) => {\n    const { 1: afterDot = '' } = value.split('.');\n\n    return afterDot.length < 3;\n  };\n\n  const validateMultipleZero = (value) => {\n    if (value.length > 2) {\n      const slicedValue = value.slice(0, 3);\n\n      if (slicedValue === '000') {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  const checkValidation = (event) => {\n    const { value } = event.target;\n    const regex = /^[0-9.]+$/;\n\n    if (\n      (value === '' || regex.test(value))\n      && validateDotDuplication(value)\n      && validateTwoDigitsAfterDot(value)\n      && validateMultipleZero(value)\n      && maxValue >= value\n    ) {\n      onChange(value);\n      setInputValue(value);\n    }\n  };\n\n  return (\n    <Wrapper>\n      {inputValue && <MinusIcon />}\n      <Input\n        onChange={checkValidation}\n        size={inputValue.length}\n        type=\"text\"\n        value={inputValue}\n        placeholder=\"amount\"\n        autoFocus\n        name=\"money-input\"\n      />\n    </Wrapper>\n  );\n};\n\nMoneyInput.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  maxValue: PropTypes.number.isRequired,\n};\n\nexport default MoneyInput;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Plus } from 'styled-icons/typicons/Plus';\nimport currencyJs from 'currency.js';\n\n// Components\nimport MoneyInput from './MoneyInput';\n\nconst Title = styled.h3`\n  font-size: 2.2rem;\n  font-weight: 400;\n  line-height: 1;\n  margin: 0;\n  text-transform: uppercase;\n`;\n\nconst Wrapper = styled.section`\n  box-sizing: border-box;\n  height: 50%;\n  ${({ secondary }) => secondary && `\n    background: linear-gradient(to bottom, rgba(0,0,0,0.15) 0%,rgba(0,0,0,0) 90%);\n  `};\n`;\n\nconst Container = styled.div`\n  margin: 0 auto;\n  width: ${props => props.theme.mobileWidth};\n  max-width: ${props => props.theme.primaryMaxWidth};\n  display: flex;\n  height: 100%;\n  align-items: center;\n  \n  @media (min-width: ${props => props.theme.mediaQuery.phoneBig}) {\n    width: ${props => props.theme.primaryWidth};\n  }\n`;\n\nconst Item = styled.div`\n  width: 100%;\n`;\n\nconst Description = styled.div`\n  opacity: 0.7;\n  margin-top: 0.5rem;\n  \n  ${({ textAlignRight }) => textAlignRight && `\n    text-align: right;\n  `};\n`;\n\nconst ResultWrapper = styled.div`\n  min-width: 6rem;\n`;\n\n\nconst Result = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\nconst ExchangeItem = ({\n  pocket,\n  primary,\n  secondary,\n  onAmountChange,\n  mainPocket,\n  actualRate,\n  changingFromCurrencySymbol,\n}) => {\n  const { currency, currencySymbol, amount } = pocket;\n  const mainPocketAmount = currencyJs(mainPocket[currency].amount);\n  const summaryAmount = (currencyJs(amount) - mainPocketAmount).value;\n\n  return (\n    <Wrapper secondary={secondary}>\n      <Container>\n        <Item>\n          <Title>{currency}</Title>\n          <Description>\n            {`You have ${currencySymbol}${mainPocketAmount.value}`}\n          </Description>\n        </Item>\n\n        {primary\n          ? (\n            <Item>\n              <MoneyInput onChange={onAmountChange} maxValue={mainPocketAmount.value} />\n            </Item>\n          ) : (\n            <ResultWrapper>\n              <Result>\n                <Fragment>\n                  <Plus size=\"20\" />\n                  <Title>\n                    {summaryAmount}\n                  </Title>\n                </Fragment>\n              </Result>\n              <Description textAlignRight>\n                {`${changingFromCurrencySymbol}1 = ${currencySymbol}${currencyJs(actualRate)}`}\n              </Description>\n            </ResultWrapper>\n          )\n        }\n      </Container>\n    </Wrapper>\n  );\n};\n\nExchangeItem.defaultProps = {\n  primary: false,\n  secondary: false,\n  onAmountChange: null,\n  actualRate: null,\n  changingFromCurrencySymbol: '',\n};\n\nExchangeItem.propTypes = {\n  pocket: PropTypes.object.isRequired,\n  primary: PropTypes.bool,\n  secondary: PropTypes.bool,\n  onAmountChange: PropTypes.func,\n  mainPocket: PropTypes.object.isRequired,\n  actualRate: PropTypes.number,\n  changingFromCurrencySymbol: PropTypes.string,\n};\n\nexport default ExchangeItem;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledSelect = styled.select`\n  display: block;\n  font-weight: 300;\n  line-height: 1;\n  color: ${props => props.theme.color.white}; \n  padding: 0.1rem 1rem;\n  text-transform: uppercase;\n  box-sizing: border-box;\n  margin: 0;\n  border: 1px solid ${props => props.theme.color.white};\n  border-radius: 0.5rem;\n  appearance: none;\n  background: none;\n  cursor: pointer;\n`;\n\nconst Select = ({\n  options,\n  onChange,\n  selected,\n  ...rest\n}) => (\n  <StyledSelect onChange={onChange} {...rest} defaultValue={selected}>\n    {options.map(option => (\n      <option key={option}>{option}</option>\n    ))}\n  </StyledSelect>\n);\n\nSelect.propTypes = {\n  options: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired,\n  selected: PropTypes.string.isRequired,\n};\n\nexport default Select;\n","import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport ReactRouterPropTypes from 'react-router-prop-types';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\n// Components\nimport Select from './Select';\n\nconst SelectorsWrapper = styled.div`\n  width: 60%;\n  display: flex;\n  align-items: center;\n`;\n\nconst Typo = styled.p`\n  margin-right: 0.5rem;\n  \n  ${({ marginLeft }) => marginLeft && `\n    margin-left: 0.5rem;\n  `}\n`;\n\nconst CurrencySelectors = ({ currencyList, history, match }) => {\n  const [selectedCurrency, setSelectedCurrency] = useState({\n    changingFromCurrency: match.params.changingFromCurrency,\n    changingToCurrency: match.params.changingToCurrency,\n  });\n\n  const { changingFromCurrency, changingToCurrency } = selectedCurrency;\n\n  const handleOnSelectChange = (event) => {\n    if (event.target.getAttribute('data-changing') === 'from') {\n      setSelectedCurrency({\n        ...selectedCurrency,\n        changingFromCurrency: event.target.value,\n      });\n    } else {\n      setSelectedCurrency({\n        ...selectedCurrency,\n        changingToCurrency: event.target.value,\n      });\n    }\n  };\n\n  useEffect(() => {\n    history.push(`/exchange/${changingFromCurrency}/${changingToCurrency}`);\n  }, [selectedCurrency]);\n\n  return (\n    <SelectorsWrapper>\n      <Typo>from</Typo>\n      <Select\n        options={currencyList.filter(currency => currency !== changingToCurrency)}\n        onChange={handleOnSelectChange}\n        data-changing=\"from\"\n        selected={changingFromCurrency}\n      />\n\n      <Typo marginLeft>to</Typo>\n      <Select\n        options={currencyList.filter(currency => currency !== changingFromCurrency)}\n        onChange={handleOnSelectChange}\n        data-changing=\"to\"\n        selected={changingToCurrency}\n      />\n    </SelectorsWrapper>\n  );\n};\n\nCurrencySelectors.propTypes = {\n  currencyList: PropTypes.array.isRequired,\n  history: ReactRouterPropTypes.history.isRequired,\n  match: ReactRouterPropTypes.match.isRequired,\n};\n\nexport default withRouter(CurrencySelectors);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport ReactRouterPropTypes from 'react-router-prop-types';\n\n// Components\nimport Button from './Button';\nimport CurrencySelectors from './CurrencySelectors';\n\nconst Background = styled.header`\n  background: ${props => props.theme.color.primary};\n  height: 12%;\n  display: flex;\n`;\n\nconst AppWrapper = styled.div`\n  width: ${props => props.theme.mobileWidth};\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  max-width: ${props => props.theme.primaryMaxWidth};\n  justify-content: space-between;\n  \n  @media (min-width: ${props => props.theme.mediaQuery.phoneBig}) {\n    width: ${props => props.theme.primaryWidth};\n  }\n`;\n\nconst ExchangeNavigation = ({ history, currencyList }) => {\n  const handleOnClick = () => {\n    history.push('/');\n  };\n\n  return (\n    <Background>\n      <AppWrapper>\n        <CurrencySelectors currencyList={currencyList} />\n        <Button onClick={handleOnClick} tertiary uppercase>back</Button>\n      </AppWrapper>\n    </Background>\n  );\n};\n\nExchangeNavigation.propTypes = {\n  history: ReactRouterPropTypes.history.isRequired,\n  currencyList: PropTypes.array.isRequired,\n};\n\nexport default withRouter(ExchangeNavigation);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Sync } from 'styled-icons/octicons/Sync';\nimport currencyJs from 'currency.js';\nimport ReactRouterPropTypes from 'react-router-prop-types';\n\n// Actions\nimport { syncWithMainPocket, setCurrencyAmount } from '../actions/exchangePocketActions';\nimport { updateMainPocket } from '../actions/mainPocketActions';\n\n// Reducers\nimport { getMainPocket, getMainPocketCurrencyList } from '../reducers/mainPocketReducer';\nimport { getExchangePocket } from '../reducers/exchangePocketReducer';\nimport { getCurrencyRates } from '../reducers/currencyRatesReducer';\nimport ExchangeItem from './ExchangeItem';\n\n// Components\nimport Button from './Button';\nimport ExchangeNavigation from './ExchangeNavigation';\n\n// Styled\nconst PrimaryWrapper = styled.section`\n  height: ${props => props.theme.primaryHeight};\n  \n  @media (min-width: ${props => props.theme.mediaQuery.phoneBig}) and (orientation: landscape) {\n    height: ${props => props.theme.mobileHeight};\n  }\n`;\n\nconst ItemsWrapper = styled.section`\n  background: ${props => props.theme.color.primaryGradient};\n  height: 73%;\n`;\n\nconst SyncIcon = styled(Sync)`\n  display: block;\n  float: right;\n  margin-left: 0.3rem;\n`;\n\nconst Footer = styled.footer`\n  text-align: center;\n  background: linear-gradient(90deg, rgba(18,67,111,1) 0%, rgba(47,144,114,1) 100%);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 15%;\n`;\n\nconst ExchangeWrapper = ({\n  mainPocket,\n  match,\n  history,\n  syncWithMainPocketAction,\n  exchangePocket,\n  currencyRates,\n  setCurrencyAmountAction,\n  updateMainPocketAction,\n  currencyList,\n}) => {\n  const { changingFromCurrency = 'usd' } = match.params;\n  const { changingToCurrency = 'eur' } = match.params;\n\n  useEffect(() => {\n    syncWithMainPocketAction(mainPocket);\n  }, []);\n\n  const changingFromPocket = exchangePocket[changingFromCurrency];\n  const changingToPocket = exchangePocket[changingToCurrency];\n\n  const actualRate = () => (\n    currencyRates[changingToCurrency].rate / currencyRates[changingFromCurrency].rate\n  );\n\n  const onAmountChange = (value) => {\n    const amountInDollars = currencyJs(value) / currencyRates[changingFromCurrency].rate;\n    const selectedCurrencyNewAmount = currencyJs(\n      mainPocket[changingFromCurrency].amount - currencyJs(value),\n    ).value;\n\n    const targetCurrencyNewAmount = (\n      currencyJs(amountInDollars) * currencyRates[changingToCurrency].rate\n      + currencyJs(mainPocket[changingToCurrency].amount)\n    ).value;\n\n    setCurrencyAmountAction(changingFromCurrency, selectedCurrencyNewAmount);\n    setCurrencyAmountAction(changingToCurrency, targetCurrencyNewAmount);\n  };\n\n  const handleOnExchange = () => {\n    if (changingToPocket.amount !== mainPocket[changingToCurrency].amount) {\n      updateMainPocketAction(exchangePocket);\n\n      history.push('/');\n    }\n  };\n\n  return (\n    <PrimaryWrapper>\n      <ExchangeNavigation currencyList={currencyList} />\n\n      <ItemsWrapper>\n        <ExchangeItem\n          mainPocket={mainPocket}\n          pocket={changingFromPocket}\n          onAmountChange={onAmountChange}\n          primary\n        />\n\n        <ExchangeItem\n          mainPocket={mainPocket}\n          pocket={changingToPocket}\n          actualRate={actualRate()}\n          changingFromCurrencySymbol={changingFromPocket.currencySymbol}\n          secondary\n        />\n      </ItemsWrapper>\n\n      <Footer>\n        <Button\n          onClick={handleOnExchange}\n          primary\n          uppercase\n        >\n          exchange\n          <SyncIcon size=\"19\" />\n        </Button>\n      </Footer>\n    </PrimaryWrapper>\n  );\n};\n\nExchangeWrapper.propTypes = {\n  mainPocket: PropTypes.object.isRequired,\n  match: ReactRouterPropTypes.match.isRequired,\n  syncWithMainPocketAction: PropTypes.func.isRequired,\n  exchangePocket: PropTypes.object.isRequired,\n  currencyRates: PropTypes.object.isRequired,\n  setCurrencyAmountAction: PropTypes.func.isRequired,\n  updateMainPocketAction: PropTypes.func.isRequired,\n  history: ReactRouterPropTypes.history.isRequired,\n  currencyList: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  mainPocket: getMainPocket(state),\n  exchangePocket: getExchangePocket(state),\n  currencyRates: getCurrencyRates(state),\n  currencyList: getMainPocketCurrencyList(state),\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    syncWithMainPocketAction: syncWithMainPocket,\n    setCurrencyAmountAction: setCurrencyAmount,\n    updateMainPocketAction: updateMainPocket,\n  },\n)(withRouter(ExchangeWrapper));\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Actions\nimport { requestUpdateCurrencyRates, cancelUpdateCurrencyRates } from '../actions/currencyRatesActions';\n\n// Reducers\nimport { getStatus } from '../reducers/currencyRatesReducer';\n\n// Components\nimport RequestLoader from '../components/RequestLoader';\nimport ExchangeWrapper from '../components/ExchangeWrapper';\n\nconst Exchange = ({\n  cancelUpdateCurrencyRatesAction,\n  requestUpdateCurrencyRatesAction,\n  status,\n}) => {\n  useEffect(() => {\n    requestUpdateCurrencyRatesAction();\n\n    return function clear() {\n      cancelUpdateCurrencyRatesAction();\n    };\n  }, []);\n\n  return (\n    <RequestLoader status={status}>\n      <ExchangeWrapper />\n    </RequestLoader>\n  );\n};\n\nExchange.propTypes = {\n  cancelUpdateCurrencyRatesAction: PropTypes.func.isRequired,\n  requestUpdateCurrencyRatesAction: PropTypes.func.isRequired,\n  status: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  status: getStatus(state),\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    requestUpdateCurrencyRatesAction: requestUpdateCurrencyRates,\n    cancelUpdateCurrencyRatesAction: cancelUpdateCurrencyRates,\n  },\n)(Exchange);\n","import React, { Fragment } from 'react';\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport styledNormalize from 'styled-normalize';\nimport {\n  BrowserRouter as Router,\n  Route,\n} from 'react-router-dom';\n\nimport theme from '../common/themeVariables';\n\n// Components\nimport Main from './Main';\nimport Exchange from './Exchange';\n\nconst GlobalStyles = createGlobalStyle`\n  ${styledNormalize}\n\n  body {\n    color: ${theme.color.white};\n    font: 100% / 1 'Barlow Semi Condensed', sans-serif;\n  }\n`;\n\nconst App = () => (\n  <ThemeProvider theme={theme}>\n    <Fragment>\n      <GlobalStyles />\n      <Router>\n        <Fragment>\n          <Route path=\"/\" component={Main} exact />\n          <Route path=\"/exchange/:changingFromCurrency/:changingToCurrency\" component={Exchange} />\n        </Fragment>\n      </Router>\n    </Fragment>\n  </ThemeProvider>\n);\n\n\nexport default App;\n","import { combineReducers } from 'redux';\n\n// Reducers\nimport mainPocket from './mainPocketReducer';\nimport currencyRates from './currencyRatesReducer';\nimport exchangePocket from './exchangePocketReducer';\n\n/**\n * Turns different reducing functions into a single reducing function\n */\nconst AppReducer = combineReducers({\n  mainPocket,\n  currencyRates,\n  exchangePocket,\n});\n\nexport default AppReducer;\n","/**\n * requestService - Service for transferring data\n */\n\n// PRIVATE\n\nconst appId = '7efd2c8dfa6549bbbe3b3911dacf4cc4';\n\n/**\n * Build url based on passed arguments\n * @param {array} currencies\n * @return {string}\n */\nconst buildFeedUrl = (currencies) => {\n  const domain = '//openexchangerates.org/';\n  const target = 'api/latest.json';\n  const query = `symbols=${currencies.join(',')}`;\n\n\n  return `${domain}${target}?app_id=${appId}&${query}`;\n};\n\n/**\n * Use HTTP pipeline such as requests and responses for transferring data\n * @async\n * @param {string} feedUrl\n * @return {Promise<object>}\n */\nconst requester = async (feedUrl) => {\n  try {\n    const response = await fetch(feedUrl);\n\n    return response.json();\n  } catch (error) {\n    throw new Error(`requestService - requester failed, message: ${error}, feedUrl: ${feedUrl}`);\n  }\n};\n\n// PUBLIC\n\n/**\n * Fetch data from feed based on passed argument\n * @async\n * @param {array} currencies\n * @return {Promise<object>}\n */\nexport const getData = async (currencies) => {\n  const feedUrl = buildFeedUrl(currencies);\n\n  return requester(feedUrl);\n};\n","import {\n  put,\n  take,\n  call,\n  delay,\n  cancelled,\n  cancel,\n  fork,\n} from 'redux-saga/effects';\n\n// Services\nimport { getData } from '../services/requestService';\n\n// Actions\nimport {\n  UPDATE_CURRENCY_RATES_REQUESTED,\n  CANCEL_UPDATE_CURRENCY_RATES,\n  updateCurrencyRatesSuccessful,\n  updateCurrencyRatesFailed,\n  updateCurrencyRatesCancelled,\n} from '../actions/currencyRatesActions';\n\nfunction* updateCurrencyRates() {\n  try {\n    while (true) {\n      const currenciesData = yield call(\n        getData,\n        ['GBP', 'EUR', 'USD'],\n      );\n\n      yield put(updateCurrencyRatesSuccessful(currenciesData));\n\n      yield delay(10000);\n    }\n  } catch (error) {\n    yield put(updateCurrencyRatesFailed(error));\n  } finally {\n    if (yield cancelled()) {\n      yield put(updateCurrencyRatesCancelled());\n    }\n  }\n}\n\nexport function* watchUpdateCurrencyRates() {\n  while (yield take(UPDATE_CURRENCY_RATES_REQUESTED)) {\n    const updateCurrencyRatesTask = yield fork(updateCurrencyRates);\n\n    yield take(CANCEL_UPDATE_CURRENCY_RATES);\n    yield cancel(updateCurrencyRatesTask);\n  }\n}\n","import { all } from 'redux-saga/effects';\n\nimport { watchUpdateCurrencyRates } from './currencyRatesSaga';\n\nexport default function* rootSaga() {\n  yield all([\n    watchUpdateCurrencyRates(),\n  ]);\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\n\n// Components\nimport App from './containers/App';\n\n// Store\nimport configureStore from './configureStore';\n\nconst store = configureStore();\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducers from './reducers/index';\nimport rootSaga from './sagas/index';\n\n/**\n * Configure Store\n * @return {Object} - The whole state tree the your application\n */\nconst configureStore = () => {\n  let store;\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [\n    sagaMiddleware,\n  ];\n\n  if (process.env.NODE_ENV === 'development') {\n    const composeEnhancers = composeWithDevTools({ name: 'exchange-currencies' });\n    store = createStore(reducers, composeEnhancers(applyMiddleware(...middlewares)));\n  } else {\n    store = applyMiddleware(...middlewares)(createStore)(reducers);\n  }\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n};\n\nexport default configureStore;\n"],"sourceRoot":""}